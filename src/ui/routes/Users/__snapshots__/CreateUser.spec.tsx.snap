// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateUser doesn't render when show=false 1`] = `
<Fragment>
  <ResponsiveFullscreenDialog
    onClose={[Function]}
    open={false}
  >
    <WithStyles(DialogTitle)>
      Neuer Nutzer
    </WithStyles(DialogTitle)>
    <WithStyles(DialogContent)>
      <form
        onKeyPress={[Function]}
      >
        <WithStyles(Grid)
          container={true}
          direction="row"
        >
          <WithStyles(Grid)
            item={true}
            lg={6}
            xs={12}
          >
            <TextInput
              label="Nutzername"
              onChange={[Function]}
              required={true}
              validator={[Function]}
              value=""
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            lg={6}
            xs={12}
          >
            <TextInput
              label="Displayname"
              onChange={[Function]}
              required={true}
              validator={[Function]}
              value=""
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            lg={6}
            xs={12}
          >
            <TextInput
              label="Email"
              onChange={[Function]}
              required={true}
              type="email"
              validator={[Function]}
              value=""
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <TextInput
              label="Passwort"
              onChange={[Function]}
              type="password"
              validator={[Function]}
              value=""
            />
          </WithStyles(Grid)>
          <WithStyles(Typography)
            variant="body1"
          >
            <de />
          </WithStyles(Typography)>
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <TextField
              SelectProps={
                Object {
                  "native": true,
                }
              }
              fullWidth={true}
              helperText="Wählen Sie die Rolle des Nutzers aus"
              label="Rolle"
              onChange={[Function]}
              required={false}
              select={true}
              value="student"
              variant="standard"
            >
              <option
                key="parent"
                value="parent"
              >
                Erziehungsberechtigte*r
              </option>
              <option
                key="student"
                value="student"
              >
                Schüler*in
              </option>
              <option
                key="teacher"
                value="teacher"
              >
                Lehrkraft
              </option>
              <option
                key="manager"
                value="manager"
              >
                Stufenleitung
              </option>
            </TextField>
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <WithStyles(WithFormControlContext(FormControlLabel))
              control={
                <WithStyles(Checkbox)
                  checked={false}
                  color="primary"
                  name="isAdmin"
                  onChange={[Function]}
                />
              }
              label="Administrator"
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <ClassPicker
              availableClasses={
                Array [
                  "2012",
                ]
              }
              label="Klasse / Abschluss-Jahrgang"
              onChange={[Function]}
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <DateInput
              label="Geburtstag"
              maxDate="1999-12-31"
              onChange={[Function]}
            />
          </WithStyles(Grid)>
        </WithStyles(Grid)>
      </form>
    </WithStyles(DialogContent)>
    <WithStyles(DialogActions)>
      <WithStyles(Button)
        className="close"
        color="secondary"
        onClick={[Function]}
      >
        Schließen
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        disabled={true}
        onClick={[Function]}
      >
        Erstellen
      </WithStyles(Button)>
    </WithStyles(DialogActions)>
  </ResponsiveFullscreenDialog>
</Fragment>
`;

exports[`CreateUser renders correctly 1`] = `
<Fragment>
  <ResponsiveFullscreenDialog
    onClose={[Function]}
    open={true}
  >
    <WithStyles(DialogTitle)>
      Neuer Nutzer
    </WithStyles(DialogTitle)>
    <WithStyles(DialogContent)>
      <form
        onKeyPress={[Function]}
      >
        <WithStyles(Grid)
          container={true}
          direction="row"
        >
          <WithStyles(Grid)
            item={true}
            lg={6}
            xs={12}
          >
            <TextInput
              label="Nutzername"
              onChange={[Function]}
              required={true}
              validator={[Function]}
              value=""
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            lg={6}
            xs={12}
          >
            <TextInput
              label="Displayname"
              onChange={[Function]}
              required={true}
              validator={[Function]}
              value=""
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            lg={6}
            xs={12}
          >
            <TextInput
              label="Email"
              onChange={[Function]}
              required={true}
              type="email"
              validator={[Function]}
              value=""
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <TextInput
              label="Passwort"
              onChange={[Function]}
              type="password"
              validator={[Function]}
              value=""
            />
          </WithStyles(Grid)>
          <WithStyles(Typography)
            variant="body1"
          >
            <de />
          </WithStyles(Typography)>
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <TextField
              SelectProps={
                Object {
                  "native": true,
                }
              }
              fullWidth={true}
              helperText="Wählen Sie die Rolle des Nutzers aus"
              label="Rolle"
              onChange={[Function]}
              required={false}
              select={true}
              value="student"
              variant="standard"
            >
              <option
                key="parent"
                value="parent"
              >
                Erziehungsberechtigte*r
              </option>
              <option
                key="student"
                value="student"
              >
                Schüler*in
              </option>
              <option
                key="teacher"
                value="teacher"
              >
                Lehrkraft
              </option>
              <option
                key="manager"
                value="manager"
              >
                Stufenleitung
              </option>
            </TextField>
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <WithStyles(WithFormControlContext(FormControlLabel))
              control={
                <WithStyles(Checkbox)
                  checked={false}
                  color="primary"
                  name="isAdmin"
                  onChange={[Function]}
                />
              }
              label="Administrator"
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <ClassPicker
              availableClasses={
                Array [
                  "2012",
                ]
              }
              label="Klasse / Abschluss-Jahrgang"
              onChange={[Function]}
            />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <DateInput
              label="Geburtstag"
              maxDate="1999-12-31"
              onChange={[Function]}
            />
          </WithStyles(Grid)>
        </WithStyles(Grid)>
      </form>
    </WithStyles(DialogContent)>
    <WithStyles(DialogActions)>
      <WithStyles(Button)
        className="close"
        color="secondary"
        onClick={[Function]}
      >
        Schließen
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        disabled={true}
        onClick={[Function]}
      >
        Erstellen
      </WithStyles(Button)>
    </WithStyles(DialogActions)>
  </ResponsiveFullscreenDialog>
</Fragment>
`;
