// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginStatus renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    classes={Object {}}
    displayname="Greg"
    logout={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <WithStyles(List)>
        <WithStyles(ListItem)>
          <WithStyles(ListItemIcon)>
            <WithStyles(IconButton)
              aria-label="logout"
              className="logout"
              onClick={[MockFunction]}
            >
              <pure(PowerSettingsNewIcon) />
            </WithStyles(IconButton)>
          </WithStyles(ListItemIcon)>
          <WithStyles(ListItemText)
            primary="Greg"
          />
        </WithStyles(ListItem)>
      </WithStyles(List)>,
      "className": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(ListItem)>
          <WithStyles(ListItemIcon)>
            <WithStyles(IconButton)
              aria-label="logout"
              className="logout"
              onClick={[MockFunction]}
            >
              <pure(PowerSettingsNewIcon) />
            </WithStyles(IconButton)>
          </WithStyles(ListItemIcon)>
          <WithStyles(ListItemText)
            primary="Greg"
          />
        </WithStyles(ListItem)>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(ListItemIcon)>
              <WithStyles(IconButton)
                aria-label="logout"
                className="logout"
                onClick={[MockFunction]}
              >
                <pure(PowerSettingsNewIcon) />
              </WithStyles(IconButton)>
            </WithStyles(ListItemIcon)>,
            <WithStyles(ListItemText)
              primary="Greg"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(IconButton)
                aria-label="logout"
                className="logout"
                onClick={[MockFunction]}
              >
                <pure(PowerSettingsNewIcon) />
              </WithStyles(IconButton)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "aria-label": "logout",
                "children": <pure(PowerSettingsNewIcon) />,
                "className": "logout",
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "primary": "Greg",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <WithStyles(List)>
          <WithStyles(ListItem)>
            <WithStyles(ListItemIcon)>
              <WithStyles(IconButton)
                aria-label="logout"
                className="logout"
                onClick={[MockFunction]}
              >
                <pure(PowerSettingsNewIcon) />
              </WithStyles(IconButton)>
            </WithStyles(ListItemIcon)>
            <WithStyles(ListItemText)
              primary="Greg"
            />
          </WithStyles(ListItem)>
        </WithStyles(List)>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(ListItem)>
            <WithStyles(ListItemIcon)>
              <WithStyles(IconButton)
                aria-label="logout"
                className="logout"
                onClick={[MockFunction]}
              >
                <pure(PowerSettingsNewIcon) />
              </WithStyles(IconButton)>
            </WithStyles(ListItemIcon)>
            <WithStyles(ListItemText)
              primary="Greg"
            />
          </WithStyles(ListItem)>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(ListItemIcon)>
                <WithStyles(IconButton)
                  aria-label="logout"
                  className="logout"
                  onClick={[MockFunction]}
                >
                  <pure(PowerSettingsNewIcon) />
                </WithStyles(IconButton)>
              </WithStyles(ListItemIcon)>,
              <WithStyles(ListItemText)
                primary="Greg"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(IconButton)
                  aria-label="logout"
                  className="logout"
                  onClick={[MockFunction]}
                >
                  <pure(PowerSettingsNewIcon) />
                </WithStyles(IconButton)>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "aria-label": "logout",
                  "children": <pure(PowerSettingsNewIcon) />,
                  "className": "logout",
                  "onClick": [MockFunction],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "primary": "Greg",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
