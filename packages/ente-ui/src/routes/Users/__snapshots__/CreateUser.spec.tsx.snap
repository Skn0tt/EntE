// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Users doesn't render when show=false 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateUser
    createUsers={[MockFunction]}
    fullScreen={true}
    getUser={[MockFunction]}
    onClose={[MockFunction]}
    show={false}
    students={
      Array [
        Immutable.UserN {
          "id": "mystupidid",
          "username": "simon",
          "children": Array [],
          "displayname": "Simon",
          "email": "email@emai.com",
          "isAdult": false,
          "role": "student",
          "childrenIds": Array [],
          "graduationYear": undefined,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <WithStyles(Dialog)
          fullScreen={true}
          onClose={[Function]}
          open={false}
        >
          <WithStyles(DialogTitle)>
            New User
          </WithStyles(DialogTitle)>
          <WithStyles(DialogContent)>
            <form
              onKeyPress={[Function]}
            >
              <WithStyles(Grid)
                container={true}
                direction="row"
              >
                <WithStyles(Grid)
                  item={true}
                  lg={6}
                  xs={12}
                >
                  <Unknown
                    label="Username"
                    onChange={[Function]}
                    required={true}
                    validator={[Function]}
                    value=""
                  />
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  lg={6}
                  xs={12}
                >
                  <Unknown
                    label="Displayname"
                    onChange={[Function]}
                    required={true}
                    validator={[Function]}
                    value=""
                  />
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  lg={6}
                  xs={12}
                >
                  <Unknown
                    label="Email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                    validator={[Function]}
                    value=""
                  />
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    label="Password"
                    onChange={[Function]}
                    type="password"
                    validator={[Function]}
                    value=""
                  />
                </WithStyles(Grid)>
                <WithStyles(Typography)
                  variant="body1"
                >
                  <en />
                </WithStyles(Typography)>
                <WithStyles(Grid)
                  item={true}
                  xs={12}
                >
                  <TextField
                    SelectProps={
                      Object {
                        "native": true,
                      }
                    }
                    fullWidth={true}
                    helperText="Choose the users's role"
                    label="Role"
                    onChange={[Function]}
                    required={false}
                    select={true}
                    value="student"
                    variant="standard"
                  >
                    <option
                      value="parent"
                    >
                      parent
                    </option>
                    <option
                      value="student"
                    >
                      student
                    </option>
                    <option
                      value="teacher"
                    >
                      teacher
                    </option>
                    <option
                      value="admin"
                    >
                      admin
                    </option>
                    <option
                      value="manager"
                    >
                      manager
                    </option>
                  </TextField>
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    amount={5}
                    label="Graduation Year"
                    onChange={[Function]}
                    value={2019}
                  />
                </WithStyles(Grid)>
              </WithStyles(Grid)>
            </form>
          </WithStyles(DialogContent)>
          <WithStyles(DialogActions)>
            <WithStyles(Button)
              onClick={[Function]}
            >
              Import
            </WithStyles(Button)>
            <WithStyles(Button)
              className="close"
              color="secondary"
              onClick={[Function]}
            >
              Close
            </WithStyles(Button)>
            <WithStyles(Button)
              color="primary"
              disabled={true}
              onClick={[Function]}
            >
              Submit
            </WithStyles(Button)>
          </WithStyles(DialogActions)>
        </WithStyles(Dialog)>,
        <Connect(WithStyles(WithTheme(WithWidth(WithMobileDialog))))
          onClose={[Function]}
          onImport={[Function]}
          show={false}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(DialogTitle)>
              New User
            </WithStyles(DialogTitle)>,
            <WithStyles(DialogContent)>
              <form
                onKeyPress={[Function]}
              >
                <WithStyles(Grid)
                  container={true}
                  direction="row"
                >
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Username"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Displayname"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      label="Password"
                      onChange={[Function]}
                      type="password"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Typography)
                    variant="body1"
                  >
                    <en />
                  </WithStyles(Typography)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <TextField
                      SelectProps={
                        Object {
                          "native": true,
                        }
                      }
                      fullWidth={true}
                      helperText="Choose the users's role"
                      label="Role"
                      onChange={[Function]}
                      required={false}
                      select={true}
                      value="student"
                      variant="standard"
                    >
                      <option
                        value="parent"
                      >
                        parent
                      </option>
                      <option
                        value="student"
                      >
                        student
                      </option>
                      <option
                        value="teacher"
                      >
                        teacher
                      </option>
                      <option
                        value="admin"
                      >
                        admin
                      </option>
                      <option
                        value="manager"
                      >
                        manager
                      </option>
                    </TextField>
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      amount={5}
                      label="Graduation Year"
                      onChange={[Function]}
                      value={2019}
                    />
                  </WithStyles(Grid)>
                </WithStyles(Grid)>
              </form>
            </WithStyles(DialogContent)>,
            <WithStyles(DialogActions)>
              <WithStyles(Button)
                onClick={[Function]}
              >
                Import
              </WithStyles(Button)>
              <WithStyles(Button)
                className="close"
                color="secondary"
                onClick={[Function]}
              >
                Close
              </WithStyles(Button)>
              <WithStyles(Button)
                color="primary"
                disabled={true}
                onClick={[Function]}
              >
                Submit
              </WithStyles(Button)>
            </WithStyles(DialogActions)>,
          ],
          "fullScreen": true,
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "New User",
            },
            "ref": null,
            "rendered": "New User",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                onKeyPress={[Function]}
              >
                <WithStyles(Grid)
                  container={true}
                  direction="row"
                >
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Username"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Displayname"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      label="Password"
                      onChange={[Function]}
                      type="password"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Typography)
                    variant="body1"
                  >
                    <en />
                  </WithStyles(Typography)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <TextField
                      SelectProps={
                        Object {
                          "native": true,
                        }
                      }
                      fullWidth={true}
                      helperText="Choose the users's role"
                      label="Role"
                      onChange={[Function]}
                      required={false}
                      select={true}
                      value="student"
                      variant="standard"
                    >
                      <option
                        value="parent"
                      >
                        parent
                      </option>
                      <option
                        value="student"
                      >
                        student
                      </option>
                      <option
                        value="teacher"
                      >
                        teacher
                      </option>
                      <option
                        value="admin"
                      >
                        admin
                      </option>
                      <option
                        value="manager"
                      >
                        manager
                      </option>
                    </TextField>
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      amount={5}
                      label="Graduation Year"
                      onChange={[Function]}
                      value={2019}
                    />
                  </WithStyles(Grid)>
                </WithStyles(Grid)>
              </form>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <WithStyles(Grid)
                  container={true}
                  direction="row"
                >
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Username"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Displayname"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      label="Password"
                      onChange={[Function]}
                      type="password"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Typography)
                    variant="body1"
                  >
                    <en />
                  </WithStyles(Typography)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <TextField
                      SelectProps={
                        Object {
                          "native": true,
                        }
                      }
                      fullWidth={true}
                      helperText="Choose the users's role"
                      label="Role"
                      onChange={[Function]}
                      required={false}
                      select={true}
                      value="student"
                      variant="standard"
                    >
                      <option
                        value="parent"
                      >
                        parent
                      </option>
                      <option
                        value="student"
                      >
                        student
                      </option>
                      <option
                        value="teacher"
                      >
                        teacher
                      </option>
                      <option
                        value="admin"
                      >
                        admin
                      </option>
                      <option
                        value="manager"
                      >
                        manager
                      </option>
                    </TextField>
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      amount={5}
                      label="Graduation Year"
                      onChange={[Function]}
                      value={2019}
                    />
                  </WithStyles(Grid)>
                </WithStyles(Grid)>,
                "onKeyPress": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Username"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>,
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Displayname"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>,
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Email"
                        onChange={[Function]}
                        required={true}
                        type="email"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>,
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        label="Password"
                        onChange={[Function]}
                        type="password"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>,
                    <WithStyles(Typography)
                      variant="body1"
                    >
                      <en />
                    </WithStyles(Typography)>,
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <TextField
                        SelectProps={
                          Object {
                            "native": true,
                          }
                        }
                        fullWidth={true}
                        helperText="Choose the users's role"
                        label="Role"
                        onChange={[Function]}
                        required={false}
                        select={true}
                        value="student"
                        variant="standard"
                      >
                        <option
                          value="parent"
                        >
                          parent
                        </option>
                        <option
                          value="student"
                        >
                          student
                        </option>
                        <option
                          value="teacher"
                        >
                          teacher
                        </option>
                        <option
                          value="admin"
                        >
                          admin
                        </option>
                        <option
                          value="manager"
                        >
                          manager
                        </option>
                      </TextField>
                    </WithStyles(Grid)>,
                    false,
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        amount={5}
                        label="Graduation Year"
                        onChange={[Function]}
                        value={2019}
                      />
                    </WithStyles(Grid)>,
                  ],
                  "container": true,
                  "direction": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        label="Username"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />,
                      "item": true,
                      "lg": 6,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "label": "Username",
                        "onChange": [Function],
                        "required": true,
                        "validator": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        label="Displayname"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />,
                      "item": true,
                      "lg": 6,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "label": "Displayname",
                        "onChange": [Function],
                        "required": true,
                        "validator": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        label="Email"
                        onChange={[Function]}
                        required={true}
                        type="email"
                        validator={[Function]}
                        value=""
                      />,
                      "item": true,
                      "lg": 6,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "label": "Email",
                        "onChange": [Function],
                        "required": true,
                        "type": "email",
                        "validator": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        label="Password"
                        onChange={[Function]}
                        type="password"
                        validator={[Function]}
                        value=""
                      />,
                      "item": true,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "label": "Password",
                        "onChange": [Function],
                        "type": "password",
                        "validator": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <en />,
                      "variant": "body1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TextField
                        SelectProps={
                          Object {
                            "native": true,
                          }
                        }
                        fullWidth={true}
                        helperText="Choose the users's role"
                        label="Role"
                        onChange={[Function]}
                        required={false}
                        select={true}
                        value="student"
                        variant="standard"
                      >
                        <option
                          value="parent"
                        >
                          parent
                        </option>
                        <option
                          value="student"
                        >
                          student
                        </option>
                        <option
                          value="teacher"
                        >
                          teacher
                        </option>
                        <option
                          value="admin"
                        >
                          admin
                        </option>
                        <option
                          value="manager"
                        >
                          manager
                        </option>
                      </TextField>,
                      "item": true,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "SelectProps": Object {
                          "native": true,
                        },
                        "children": Array [
                          <option
                            value="parent"
                          >
                            parent
                          </option>,
                          <option
                            value="student"
                          >
                            student
                          </option>,
                          <option
                            value="teacher"
                          >
                            teacher
                          </option>,
                          <option
                            value="admin"
                          >
                            admin
                          </option>,
                          <option
                            value="manager"
                          >
                            manager
                          </option>,
                        ],
                        "fullWidth": true,
                        "helperText": "Choose the users's role",
                        "label": "Role",
                        "onChange": [Function],
                        "required": false,
                        "select": true,
                        "value": "student",
                        "variant": "standard",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "parent",
                          "nodeType": "host",
                          "props": Object {
                            "children": "parent",
                            "value": "parent",
                          },
                          "ref": null,
                          "rendered": "parent",
                          "type": "option",
                        },
                        Object {
                          "instance": null,
                          "key": "student",
                          "nodeType": "host",
                          "props": Object {
                            "children": "student",
                            "value": "student",
                          },
                          "ref": null,
                          "rendered": "student",
                          "type": "option",
                        },
                        Object {
                          "instance": null,
                          "key": "teacher",
                          "nodeType": "host",
                          "props": Object {
                            "children": "teacher",
                            "value": "teacher",
                          },
                          "ref": null,
                          "rendered": "teacher",
                          "type": "option",
                        },
                        Object {
                          "instance": null,
                          "key": "admin",
                          "nodeType": "host",
                          "props": Object {
                            "children": "admin",
                            "value": "admin",
                          },
                          "ref": null,
                          "rendered": "admin",
                          "type": "option",
                        },
                        Object {
                          "instance": null,
                          "key": "manager",
                          "nodeType": "host",
                          "props": Object {
                            "children": "manager",
                            "value": "manager",
                          },
                          "ref": null,
                          "rendered": "manager",
                          "type": "option",
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  false,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        amount={5}
                        label="Graduation Year"
                        onChange={[Function]}
                        value={2019}
                      />,
                      "item": true,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "amount": 5,
                        "label": "Graduation Year",
                        "onChange": [Function],
                        "value": 2019,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": "form",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(Button)
                  onClick={[Function]}
                >
                  Import
                </WithStyles(Button)>,
                <WithStyles(Button)
                  className="close"
                  color="secondary"
                  onClick={[Function]}
                >
                  Close
                </WithStyles(Button)>,
                <WithStyles(Button)
                  color="primary"
                  disabled={true}
                  onClick={[Function]}
                >
                  Submit
                </WithStyles(Button)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Import",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Import",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Close",
                  "className": "close",
                  "color": "secondary",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Close",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Submit",
                  "color": "primary",
                  "disabled": true,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Submit",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onClose": [Function],
          "onImport": [Function],
          "show": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <WithStyles(Dialog)
            fullScreen={true}
            onClose={[Function]}
            open={false}
          >
            <WithStyles(DialogTitle)>
              New User
            </WithStyles(DialogTitle)>
            <WithStyles(DialogContent)>
              <form
                onKeyPress={[Function]}
              >
                <WithStyles(Grid)
                  container={true}
                  direction="row"
                >
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Username"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Displayname"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      label="Password"
                      onChange={[Function]}
                      type="password"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Typography)
                    variant="body1"
                  >
                    <en />
                  </WithStyles(Typography)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <TextField
                      SelectProps={
                        Object {
                          "native": true,
                        }
                      }
                      fullWidth={true}
                      helperText="Choose the users's role"
                      label="Role"
                      onChange={[Function]}
                      required={false}
                      select={true}
                      value="student"
                      variant="standard"
                    >
                      <option
                        value="parent"
                      >
                        parent
                      </option>
                      <option
                        value="student"
                      >
                        student
                      </option>
                      <option
                        value="teacher"
                      >
                        teacher
                      </option>
                      <option
                        value="admin"
                      >
                        admin
                      </option>
                      <option
                        value="manager"
                      >
                        manager
                      </option>
                    </TextField>
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      amount={5}
                      label="Graduation Year"
                      onChange={[Function]}
                      value={2019}
                    />
                  </WithStyles(Grid)>
                </WithStyles(Grid)>
              </form>
            </WithStyles(DialogContent)>
            <WithStyles(DialogActions)>
              <WithStyles(Button)
                onClick={[Function]}
              >
                Import
              </WithStyles(Button)>
              <WithStyles(Button)
                className="close"
                color="secondary"
                onClick={[Function]}
              >
                Close
              </WithStyles(Button)>
              <WithStyles(Button)
                color="primary"
                disabled={true}
                onClick={[Function]}
              >
                Submit
              </WithStyles(Button)>
            </WithStyles(DialogActions)>
          </WithStyles(Dialog)>,
          <Connect(WithStyles(WithTheme(WithWidth(WithMobileDialog))))
            onClose={[Function]}
            onImport={[Function]}
            show={false}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(DialogTitle)>
                New User
              </WithStyles(DialogTitle)>,
              <WithStyles(DialogContent)>
                <form
                  onKeyPress={[Function]}
                >
                  <WithStyles(Grid)
                    container={true}
                    direction="row"
                  >
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Username"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Displayname"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Email"
                        onChange={[Function]}
                        required={true}
                        type="email"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        label="Password"
                        onChange={[Function]}
                        type="password"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Typography)
                      variant="body1"
                    >
                      <en />
                    </WithStyles(Typography)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <TextField
                        SelectProps={
                          Object {
                            "native": true,
                          }
                        }
                        fullWidth={true}
                        helperText="Choose the users's role"
                        label="Role"
                        onChange={[Function]}
                        required={false}
                        select={true}
                        value="student"
                        variant="standard"
                      >
                        <option
                          value="parent"
                        >
                          parent
                        </option>
                        <option
                          value="student"
                        >
                          student
                        </option>
                        <option
                          value="teacher"
                        >
                          teacher
                        </option>
                        <option
                          value="admin"
                        >
                          admin
                        </option>
                        <option
                          value="manager"
                        >
                          manager
                        </option>
                      </TextField>
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        amount={5}
                        label="Graduation Year"
                        onChange={[Function]}
                        value={2019}
                      />
                    </WithStyles(Grid)>
                  </WithStyles(Grid)>
                </form>
              </WithStyles(DialogContent)>,
              <WithStyles(DialogActions)>
                <WithStyles(Button)
                  onClick={[Function]}
                >
                  Import
                </WithStyles(Button)>
                <WithStyles(Button)
                  className="close"
                  color="secondary"
                  onClick={[Function]}
                >
                  Close
                </WithStyles(Button)>
                <WithStyles(Button)
                  color="primary"
                  disabled={true}
                  onClick={[Function]}
                >
                  Submit
                </WithStyles(Button)>
              </WithStyles(DialogActions)>,
            ],
            "fullScreen": true,
            "onClose": [Function],
            "open": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "New User",
              },
              "ref": null,
              "rendered": "New User",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <form
                  onKeyPress={[Function]}
                >
                  <WithStyles(Grid)
                    container={true}
                    direction="row"
                  >
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Username"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Displayname"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Email"
                        onChange={[Function]}
                        required={true}
                        type="email"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        label="Password"
                        onChange={[Function]}
                        type="password"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Typography)
                      variant="body1"
                    >
                      <en />
                    </WithStyles(Typography)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <TextField
                        SelectProps={
                          Object {
                            "native": true,
                          }
                        }
                        fullWidth={true}
                        helperText="Choose the users's role"
                        label="Role"
                        onChange={[Function]}
                        required={false}
                        select={true}
                        value="student"
                        variant="standard"
                      >
                        <option
                          value="parent"
                        >
                          parent
                        </option>
                        <option
                          value="student"
                        >
                          student
                        </option>
                        <option
                          value="teacher"
                        >
                          teacher
                        </option>
                        <option
                          value="admin"
                        >
                          admin
                        </option>
                        <option
                          value="manager"
                        >
                          manager
                        </option>
                      </TextField>
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        amount={5}
                        label="Graduation Year"
                        onChange={[Function]}
                        value={2019}
                      />
                    </WithStyles(Grid)>
                  </WithStyles(Grid)>
                </form>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <WithStyles(Grid)
                    container={true}
                    direction="row"
                  >
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Username"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Displayname"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Email"
                        onChange={[Function]}
                        required={true}
                        type="email"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        label="Password"
                        onChange={[Function]}
                        type="password"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Typography)
                      variant="body1"
                    >
                      <en />
                    </WithStyles(Typography)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <TextField
                        SelectProps={
                          Object {
                            "native": true,
                          }
                        }
                        fullWidth={true}
                        helperText="Choose the users's role"
                        label="Role"
                        onChange={[Function]}
                        required={false}
                        select={true}
                        value="student"
                        variant="standard"
                      >
                        <option
                          value="parent"
                        >
                          parent
                        </option>
                        <option
                          value="student"
                        >
                          student
                        </option>
                        <option
                          value="teacher"
                        >
                          teacher
                        </option>
                        <option
                          value="admin"
                        >
                          admin
                        </option>
                        <option
                          value="manager"
                        >
                          manager
                        </option>
                      </TextField>
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        amount={5}
                        label="Graduation Year"
                        onChange={[Function]}
                        value={2019}
                      />
                    </WithStyles(Grid)>
                  </WithStyles(Grid)>,
                  "onKeyPress": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(Grid)
                        item={true}
                        lg={6}
                        xs={12}
                      >
                        <Unknown
                          label="Username"
                          onChange={[Function]}
                          required={true}
                          validator={[Function]}
                          value=""
                        />
                      </WithStyles(Grid)>,
                      <WithStyles(Grid)
                        item={true}
                        lg={6}
                        xs={12}
                      >
                        <Unknown
                          label="Displayname"
                          onChange={[Function]}
                          required={true}
                          validator={[Function]}
                          value=""
                        />
                      </WithStyles(Grid)>,
                      <WithStyles(Grid)
                        item={true}
                        lg={6}
                        xs={12}
                      >
                        <Unknown
                          label="Email"
                          onChange={[Function]}
                          required={true}
                          type="email"
                          validator={[Function]}
                          value=""
                        />
                      </WithStyles(Grid)>,
                      <WithStyles(Grid)
                        item={true}
                        xs={12}
                      >
                        <Unknown
                          label="Password"
                          onChange={[Function]}
                          type="password"
                          validator={[Function]}
                          value=""
                        />
                      </WithStyles(Grid)>,
                      <WithStyles(Typography)
                        variant="body1"
                      >
                        <en />
                      </WithStyles(Typography)>,
                      <WithStyles(Grid)
                        item={true}
                        xs={12}
                      >
                        <TextField
                          SelectProps={
                            Object {
                              "native": true,
                            }
                          }
                          fullWidth={true}
                          helperText="Choose the users's role"
                          label="Role"
                          onChange={[Function]}
                          required={false}
                          select={true}
                          value="student"
                          variant="standard"
                        >
                          <option
                            value="parent"
                          >
                            parent
                          </option>
                          <option
                            value="student"
                          >
                            student
                          </option>
                          <option
                            value="teacher"
                          >
                            teacher
                          </option>
                          <option
                            value="admin"
                          >
                            admin
                          </option>
                          <option
                            value="manager"
                          >
                            manager
                          </option>
                        </TextField>
                      </WithStyles(Grid)>,
                      false,
                      <WithStyles(Grid)
                        item={true}
                        xs={12}
                      >
                        <Unknown
                          amount={5}
                          label="Graduation Year"
                          onChange={[Function]}
                          value={2019}
                        />
                      </WithStyles(Grid)>,
                    ],
                    "container": true,
                    "direction": "row",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Unknown
                          label="Username"
                          onChange={[Function]}
                          required={true}
                          validator={[Function]}
                          value=""
                        />,
                        "item": true,
                        "lg": 6,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "label": "Username",
                          "onChange": [Function],
                          "required": true,
                          "validator": [Function],
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Unknown
                          label="Displayname"
                          onChange={[Function]}
                          required={true}
                          validator={[Function]}
                          value=""
                        />,
                        "item": true,
                        "lg": 6,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "label": "Displayname",
                          "onChange": [Function],
                          "required": true,
                          "validator": [Function],
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Unknown
                          label="Email"
                          onChange={[Function]}
                          required={true}
                          type="email"
                          validator={[Function]}
                          value=""
                        />,
                        "item": true,
                        "lg": 6,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "label": "Email",
                          "onChange": [Function],
                          "required": true,
                          "type": "email",
                          "validator": [Function],
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Unknown
                          label="Password"
                          onChange={[Function]}
                          type="password"
                          validator={[Function]}
                          value=""
                        />,
                        "item": true,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "label": "Password",
                          "onChange": [Function],
                          "type": "password",
                          "validator": [Function],
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <en />,
                        "variant": "body1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <TextField
                          SelectProps={
                            Object {
                              "native": true,
                            }
                          }
                          fullWidth={true}
                          helperText="Choose the users's role"
                          label="Role"
                          onChange={[Function]}
                          required={false}
                          select={true}
                          value="student"
                          variant="standard"
                        >
                          <option
                            value="parent"
                          >
                            parent
                          </option>
                          <option
                            value="student"
                          >
                            student
                          </option>
                          <option
                            value="teacher"
                          >
                            teacher
                          </option>
                          <option
                            value="admin"
                          >
                            admin
                          </option>
                          <option
                            value="manager"
                          >
                            manager
                          </option>
                        </TextField>,
                        "item": true,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "SelectProps": Object {
                            "native": true,
                          },
                          "children": Array [
                            <option
                              value="parent"
                            >
                              parent
                            </option>,
                            <option
                              value="student"
                            >
                              student
                            </option>,
                            <option
                              value="teacher"
                            >
                              teacher
                            </option>,
                            <option
                              value="admin"
                            >
                              admin
                            </option>,
                            <option
                              value="manager"
                            >
                              manager
                            </option>,
                          ],
                          "fullWidth": true,
                          "helperText": "Choose the users's role",
                          "label": "Role",
                          "onChange": [Function],
                          "required": false,
                          "select": true,
                          "value": "student",
                          "variant": "standard",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "parent",
                            "nodeType": "host",
                            "props": Object {
                              "children": "parent",
                              "value": "parent",
                            },
                            "ref": null,
                            "rendered": "parent",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "student",
                            "nodeType": "host",
                            "props": Object {
                              "children": "student",
                              "value": "student",
                            },
                            "ref": null,
                            "rendered": "student",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "teacher",
                            "nodeType": "host",
                            "props": Object {
                              "children": "teacher",
                              "value": "teacher",
                            },
                            "ref": null,
                            "rendered": "teacher",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "admin",
                            "nodeType": "host",
                            "props": Object {
                              "children": "admin",
                              "value": "admin",
                            },
                            "ref": null,
                            "rendered": "admin",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "manager",
                            "nodeType": "host",
                            "props": Object {
                              "children": "manager",
                              "value": "manager",
                            },
                            "ref": null,
                            "rendered": "manager",
                            "type": "option",
                          },
                        ],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    false,
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Unknown
                          amount={5}
                          label="Graduation Year"
                          onChange={[Function]}
                          value={2019}
                        />,
                        "item": true,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "amount": 5,
                          "label": "Graduation Year",
                          "onChange": [Function],
                          "value": 2019,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": "form",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(Button)
                    onClick={[Function]}
                  >
                    Import
                  </WithStyles(Button)>,
                  <WithStyles(Button)
                    className="close"
                    color="secondary"
                    onClick={[Function]}
                  >
                    Close
                  </WithStyles(Button)>,
                  <WithStyles(Button)
                    color="primary"
                    disabled={true}
                    onClick={[Function]}
                  >
                    Submit
                  </WithStyles(Button)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Import",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Import",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Close",
                    "className": "close",
                    "color": "secondary",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Close",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Submit",
                    "color": "primary",
                    "disabled": true,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Submit",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onClose": [Function],
            "onImport": [Function],
            "show": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Users renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateUser
    createUsers={[MockFunction]}
    fullScreen={true}
    getUser={[MockFunction]}
    onClose={[MockFunction]}
    show={true}
    students={
      Array [
        Immutable.UserN {
          "id": "mystupidid",
          "username": "simon",
          "children": Array [],
          "displayname": "Simon",
          "email": "email@emai.com",
          "isAdult": false,
          "role": "student",
          "childrenIds": Array [],
          "graduationYear": undefined,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <WithStyles(Dialog)
          fullScreen={true}
          onClose={[Function]}
          open={true}
        >
          <WithStyles(DialogTitle)>
            New User
          </WithStyles(DialogTitle)>
          <WithStyles(DialogContent)>
            <form
              onKeyPress={[Function]}
            >
              <WithStyles(Grid)
                container={true}
                direction="row"
              >
                <WithStyles(Grid)
                  item={true}
                  lg={6}
                  xs={12}
                >
                  <Unknown
                    label="Username"
                    onChange={[Function]}
                    required={true}
                    validator={[Function]}
                    value=""
                  />
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  lg={6}
                  xs={12}
                >
                  <Unknown
                    label="Displayname"
                    onChange={[Function]}
                    required={true}
                    validator={[Function]}
                    value=""
                  />
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  lg={6}
                  xs={12}
                >
                  <Unknown
                    label="Email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                    validator={[Function]}
                    value=""
                  />
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    label="Password"
                    onChange={[Function]}
                    type="password"
                    validator={[Function]}
                    value=""
                  />
                </WithStyles(Grid)>
                <WithStyles(Typography)
                  variant="body1"
                >
                  <en />
                </WithStyles(Typography)>
                <WithStyles(Grid)
                  item={true}
                  xs={12}
                >
                  <TextField
                    SelectProps={
                      Object {
                        "native": true,
                      }
                    }
                    fullWidth={true}
                    helperText="Choose the users's role"
                    label="Role"
                    onChange={[Function]}
                    required={false}
                    select={true}
                    value="student"
                    variant="standard"
                  >
                    <option
                      value="parent"
                    >
                      parent
                    </option>
                    <option
                      value="student"
                    >
                      student
                    </option>
                    <option
                      value="teacher"
                    >
                      teacher
                    </option>
                    <option
                      value="admin"
                    >
                      admin
                    </option>
                    <option
                      value="manager"
                    >
                      manager
                    </option>
                  </TextField>
                </WithStyles(Grid)>
                <WithStyles(Grid)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    amount={5}
                    label="Graduation Year"
                    onChange={[Function]}
                    value={2019}
                  />
                </WithStyles(Grid)>
              </WithStyles(Grid)>
            </form>
          </WithStyles(DialogContent)>
          <WithStyles(DialogActions)>
            <WithStyles(Button)
              onClick={[Function]}
            >
              Import
            </WithStyles(Button)>
            <WithStyles(Button)
              className="close"
              color="secondary"
              onClick={[Function]}
            >
              Close
            </WithStyles(Button)>
            <WithStyles(Button)
              color="primary"
              disabled={true}
              onClick={[Function]}
            >
              Submit
            </WithStyles(Button)>
          </WithStyles(DialogActions)>
        </WithStyles(Dialog)>,
        <Connect(WithStyles(WithTheme(WithWidth(WithMobileDialog))))
          onClose={[Function]}
          onImport={[Function]}
          show={false}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(DialogTitle)>
              New User
            </WithStyles(DialogTitle)>,
            <WithStyles(DialogContent)>
              <form
                onKeyPress={[Function]}
              >
                <WithStyles(Grid)
                  container={true}
                  direction="row"
                >
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Username"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Displayname"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      label="Password"
                      onChange={[Function]}
                      type="password"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Typography)
                    variant="body1"
                  >
                    <en />
                  </WithStyles(Typography)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <TextField
                      SelectProps={
                        Object {
                          "native": true,
                        }
                      }
                      fullWidth={true}
                      helperText="Choose the users's role"
                      label="Role"
                      onChange={[Function]}
                      required={false}
                      select={true}
                      value="student"
                      variant="standard"
                    >
                      <option
                        value="parent"
                      >
                        parent
                      </option>
                      <option
                        value="student"
                      >
                        student
                      </option>
                      <option
                        value="teacher"
                      >
                        teacher
                      </option>
                      <option
                        value="admin"
                      >
                        admin
                      </option>
                      <option
                        value="manager"
                      >
                        manager
                      </option>
                    </TextField>
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      amount={5}
                      label="Graduation Year"
                      onChange={[Function]}
                      value={2019}
                    />
                  </WithStyles(Grid)>
                </WithStyles(Grid)>
              </form>
            </WithStyles(DialogContent)>,
            <WithStyles(DialogActions)>
              <WithStyles(Button)
                onClick={[Function]}
              >
                Import
              </WithStyles(Button)>
              <WithStyles(Button)
                className="close"
                color="secondary"
                onClick={[Function]}
              >
                Close
              </WithStyles(Button)>
              <WithStyles(Button)
                color="primary"
                disabled={true}
                onClick={[Function]}
              >
                Submit
              </WithStyles(Button)>
            </WithStyles(DialogActions)>,
          ],
          "fullScreen": true,
          "onClose": [Function],
          "open": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "New User",
            },
            "ref": null,
            "rendered": "New User",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <form
                onKeyPress={[Function]}
              >
                <WithStyles(Grid)
                  container={true}
                  direction="row"
                >
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Username"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Displayname"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      label="Password"
                      onChange={[Function]}
                      type="password"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Typography)
                    variant="body1"
                  >
                    <en />
                  </WithStyles(Typography)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <TextField
                      SelectProps={
                        Object {
                          "native": true,
                        }
                      }
                      fullWidth={true}
                      helperText="Choose the users's role"
                      label="Role"
                      onChange={[Function]}
                      required={false}
                      select={true}
                      value="student"
                      variant="standard"
                    >
                      <option
                        value="parent"
                      >
                        parent
                      </option>
                      <option
                        value="student"
                      >
                        student
                      </option>
                      <option
                        value="teacher"
                      >
                        teacher
                      </option>
                      <option
                        value="admin"
                      >
                        admin
                      </option>
                      <option
                        value="manager"
                      >
                        manager
                      </option>
                    </TextField>
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      amount={5}
                      label="Graduation Year"
                      onChange={[Function]}
                      value={2019}
                    />
                  </WithStyles(Grid)>
                </WithStyles(Grid)>
              </form>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <WithStyles(Grid)
                  container={true}
                  direction="row"
                >
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Username"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Displayname"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      label="Password"
                      onChange={[Function]}
                      type="password"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Typography)
                    variant="body1"
                  >
                    <en />
                  </WithStyles(Typography)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <TextField
                      SelectProps={
                        Object {
                          "native": true,
                        }
                      }
                      fullWidth={true}
                      helperText="Choose the users's role"
                      label="Role"
                      onChange={[Function]}
                      required={false}
                      select={true}
                      value="student"
                      variant="standard"
                    >
                      <option
                        value="parent"
                      >
                        parent
                      </option>
                      <option
                        value="student"
                      >
                        student
                      </option>
                      <option
                        value="teacher"
                      >
                        teacher
                      </option>
                      <option
                        value="admin"
                      >
                        admin
                      </option>
                      <option
                        value="manager"
                      >
                        manager
                      </option>
                    </TextField>
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      amount={5}
                      label="Graduation Year"
                      onChange={[Function]}
                      value={2019}
                    />
                  </WithStyles(Grid)>
                </WithStyles(Grid)>,
                "onKeyPress": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Username"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>,
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Displayname"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>,
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Email"
                        onChange={[Function]}
                        required={true}
                        type="email"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>,
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        label="Password"
                        onChange={[Function]}
                        type="password"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>,
                    <WithStyles(Typography)
                      variant="body1"
                    >
                      <en />
                    </WithStyles(Typography)>,
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <TextField
                        SelectProps={
                          Object {
                            "native": true,
                          }
                        }
                        fullWidth={true}
                        helperText="Choose the users's role"
                        label="Role"
                        onChange={[Function]}
                        required={false}
                        select={true}
                        value="student"
                        variant="standard"
                      >
                        <option
                          value="parent"
                        >
                          parent
                        </option>
                        <option
                          value="student"
                        >
                          student
                        </option>
                        <option
                          value="teacher"
                        >
                          teacher
                        </option>
                        <option
                          value="admin"
                        >
                          admin
                        </option>
                        <option
                          value="manager"
                        >
                          manager
                        </option>
                      </TextField>
                    </WithStyles(Grid)>,
                    false,
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        amount={5}
                        label="Graduation Year"
                        onChange={[Function]}
                        value={2019}
                      />
                    </WithStyles(Grid)>,
                  ],
                  "container": true,
                  "direction": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        label="Username"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />,
                      "item": true,
                      "lg": 6,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "label": "Username",
                        "onChange": [Function],
                        "required": true,
                        "validator": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        label="Displayname"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />,
                      "item": true,
                      "lg": 6,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "label": "Displayname",
                        "onChange": [Function],
                        "required": true,
                        "validator": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        label="Email"
                        onChange={[Function]}
                        required={true}
                        type="email"
                        validator={[Function]}
                        value=""
                      />,
                      "item": true,
                      "lg": 6,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "label": "Email",
                        "onChange": [Function],
                        "required": true,
                        "type": "email",
                        "validator": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        label="Password"
                        onChange={[Function]}
                        type="password"
                        validator={[Function]}
                        value=""
                      />,
                      "item": true,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "label": "Password",
                        "onChange": [Function],
                        "type": "password",
                        "validator": [Function],
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <en />,
                      "variant": "body1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TextField
                        SelectProps={
                          Object {
                            "native": true,
                          }
                        }
                        fullWidth={true}
                        helperText="Choose the users's role"
                        label="Role"
                        onChange={[Function]}
                        required={false}
                        select={true}
                        value="student"
                        variant="standard"
                      >
                        <option
                          value="parent"
                        >
                          parent
                        </option>
                        <option
                          value="student"
                        >
                          student
                        </option>
                        <option
                          value="teacher"
                        >
                          teacher
                        </option>
                        <option
                          value="admin"
                        >
                          admin
                        </option>
                        <option
                          value="manager"
                        >
                          manager
                        </option>
                      </TextField>,
                      "item": true,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "SelectProps": Object {
                          "native": true,
                        },
                        "children": Array [
                          <option
                            value="parent"
                          >
                            parent
                          </option>,
                          <option
                            value="student"
                          >
                            student
                          </option>,
                          <option
                            value="teacher"
                          >
                            teacher
                          </option>,
                          <option
                            value="admin"
                          >
                            admin
                          </option>,
                          <option
                            value="manager"
                          >
                            manager
                          </option>,
                        ],
                        "fullWidth": true,
                        "helperText": "Choose the users's role",
                        "label": "Role",
                        "onChange": [Function],
                        "required": false,
                        "select": true,
                        "value": "student",
                        "variant": "standard",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "parent",
                          "nodeType": "host",
                          "props": Object {
                            "children": "parent",
                            "value": "parent",
                          },
                          "ref": null,
                          "rendered": "parent",
                          "type": "option",
                        },
                        Object {
                          "instance": null,
                          "key": "student",
                          "nodeType": "host",
                          "props": Object {
                            "children": "student",
                            "value": "student",
                          },
                          "ref": null,
                          "rendered": "student",
                          "type": "option",
                        },
                        Object {
                          "instance": null,
                          "key": "teacher",
                          "nodeType": "host",
                          "props": Object {
                            "children": "teacher",
                            "value": "teacher",
                          },
                          "ref": null,
                          "rendered": "teacher",
                          "type": "option",
                        },
                        Object {
                          "instance": null,
                          "key": "admin",
                          "nodeType": "host",
                          "props": Object {
                            "children": "admin",
                            "value": "admin",
                          },
                          "ref": null,
                          "rendered": "admin",
                          "type": "option",
                        },
                        Object {
                          "instance": null,
                          "key": "manager",
                          "nodeType": "host",
                          "props": Object {
                            "children": "manager",
                            "value": "manager",
                          },
                          "ref": null,
                          "rendered": "manager",
                          "type": "option",
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  false,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        amount={5}
                        label="Graduation Year"
                        onChange={[Function]}
                        value={2019}
                      />,
                      "item": true,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "amount": 5,
                        "label": "Graduation Year",
                        "onChange": [Function],
                        "value": 2019,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": "form",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(Button)
                  onClick={[Function]}
                >
                  Import
                </WithStyles(Button)>,
                <WithStyles(Button)
                  className="close"
                  color="secondary"
                  onClick={[Function]}
                >
                  Close
                </WithStyles(Button)>,
                <WithStyles(Button)
                  color="primary"
                  disabled={true}
                  onClick={[Function]}
                >
                  Submit
                </WithStyles(Button)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Import",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Import",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Close",
                  "className": "close",
                  "color": "secondary",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Close",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Submit",
                  "color": "primary",
                  "disabled": true,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Submit",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onClose": [Function],
          "onImport": [Function],
          "show": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <WithStyles(Dialog)
            fullScreen={true}
            onClose={[Function]}
            open={true}
          >
            <WithStyles(DialogTitle)>
              New User
            </WithStyles(DialogTitle)>
            <WithStyles(DialogContent)>
              <form
                onKeyPress={[Function]}
              >
                <WithStyles(Grid)
                  container={true}
                  direction="row"
                >
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Username"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Displayname"
                      onChange={[Function]}
                      required={true}
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    lg={6}
                    xs={12}
                  >
                    <Unknown
                      label="Email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      label="Password"
                      onChange={[Function]}
                      type="password"
                      validator={[Function]}
                      value=""
                    />
                  </WithStyles(Grid)>
                  <WithStyles(Typography)
                    variant="body1"
                  >
                    <en />
                  </WithStyles(Typography)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <TextField
                      SelectProps={
                        Object {
                          "native": true,
                        }
                      }
                      fullWidth={true}
                      helperText="Choose the users's role"
                      label="Role"
                      onChange={[Function]}
                      required={false}
                      select={true}
                      value="student"
                      variant="standard"
                    >
                      <option
                        value="parent"
                      >
                        parent
                      </option>
                      <option
                        value="student"
                      >
                        student
                      </option>
                      <option
                        value="teacher"
                      >
                        teacher
                      </option>
                      <option
                        value="admin"
                      >
                        admin
                      </option>
                      <option
                        value="manager"
                      >
                        manager
                      </option>
                    </TextField>
                  </WithStyles(Grid)>
                  <WithStyles(Grid)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      amount={5}
                      label="Graduation Year"
                      onChange={[Function]}
                      value={2019}
                    />
                  </WithStyles(Grid)>
                </WithStyles(Grid)>
              </form>
            </WithStyles(DialogContent)>
            <WithStyles(DialogActions)>
              <WithStyles(Button)
                onClick={[Function]}
              >
                Import
              </WithStyles(Button)>
              <WithStyles(Button)
                className="close"
                color="secondary"
                onClick={[Function]}
              >
                Close
              </WithStyles(Button)>
              <WithStyles(Button)
                color="primary"
                disabled={true}
                onClick={[Function]}
              >
                Submit
              </WithStyles(Button)>
            </WithStyles(DialogActions)>
          </WithStyles(Dialog)>,
          <Connect(WithStyles(WithTheme(WithWidth(WithMobileDialog))))
            onClose={[Function]}
            onImport={[Function]}
            show={false}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(DialogTitle)>
                New User
              </WithStyles(DialogTitle)>,
              <WithStyles(DialogContent)>
                <form
                  onKeyPress={[Function]}
                >
                  <WithStyles(Grid)
                    container={true}
                    direction="row"
                  >
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Username"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Displayname"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Email"
                        onChange={[Function]}
                        required={true}
                        type="email"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        label="Password"
                        onChange={[Function]}
                        type="password"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Typography)
                      variant="body1"
                    >
                      <en />
                    </WithStyles(Typography)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <TextField
                        SelectProps={
                          Object {
                            "native": true,
                          }
                        }
                        fullWidth={true}
                        helperText="Choose the users's role"
                        label="Role"
                        onChange={[Function]}
                        required={false}
                        select={true}
                        value="student"
                        variant="standard"
                      >
                        <option
                          value="parent"
                        >
                          parent
                        </option>
                        <option
                          value="student"
                        >
                          student
                        </option>
                        <option
                          value="teacher"
                        >
                          teacher
                        </option>
                        <option
                          value="admin"
                        >
                          admin
                        </option>
                        <option
                          value="manager"
                        >
                          manager
                        </option>
                      </TextField>
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        amount={5}
                        label="Graduation Year"
                        onChange={[Function]}
                        value={2019}
                      />
                    </WithStyles(Grid)>
                  </WithStyles(Grid)>
                </form>
              </WithStyles(DialogContent)>,
              <WithStyles(DialogActions)>
                <WithStyles(Button)
                  onClick={[Function]}
                >
                  Import
                </WithStyles(Button)>
                <WithStyles(Button)
                  className="close"
                  color="secondary"
                  onClick={[Function]}
                >
                  Close
                </WithStyles(Button)>
                <WithStyles(Button)
                  color="primary"
                  disabled={true}
                  onClick={[Function]}
                >
                  Submit
                </WithStyles(Button)>
              </WithStyles(DialogActions)>,
            ],
            "fullScreen": true,
            "onClose": [Function],
            "open": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "New User",
              },
              "ref": null,
              "rendered": "New User",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <form
                  onKeyPress={[Function]}
                >
                  <WithStyles(Grid)
                    container={true}
                    direction="row"
                  >
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Username"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Displayname"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Email"
                        onChange={[Function]}
                        required={true}
                        type="email"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        label="Password"
                        onChange={[Function]}
                        type="password"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Typography)
                      variant="body1"
                    >
                      <en />
                    </WithStyles(Typography)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <TextField
                        SelectProps={
                          Object {
                            "native": true,
                          }
                        }
                        fullWidth={true}
                        helperText="Choose the users's role"
                        label="Role"
                        onChange={[Function]}
                        required={false}
                        select={true}
                        value="student"
                        variant="standard"
                      >
                        <option
                          value="parent"
                        >
                          parent
                        </option>
                        <option
                          value="student"
                        >
                          student
                        </option>
                        <option
                          value="teacher"
                        >
                          teacher
                        </option>
                        <option
                          value="admin"
                        >
                          admin
                        </option>
                        <option
                          value="manager"
                        >
                          manager
                        </option>
                      </TextField>
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        amount={5}
                        label="Graduation Year"
                        onChange={[Function]}
                        value={2019}
                      />
                    </WithStyles(Grid)>
                  </WithStyles(Grid)>
                </form>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <WithStyles(Grid)
                    container={true}
                    direction="row"
                  >
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Username"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Displayname"
                        onChange={[Function]}
                        required={true}
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      lg={6}
                      xs={12}
                    >
                      <Unknown
                        label="Email"
                        onChange={[Function]}
                        required={true}
                        type="email"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        label="Password"
                        onChange={[Function]}
                        type="password"
                        validator={[Function]}
                        value=""
                      />
                    </WithStyles(Grid)>
                    <WithStyles(Typography)
                      variant="body1"
                    >
                      <en />
                    </WithStyles(Typography)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <TextField
                        SelectProps={
                          Object {
                            "native": true,
                          }
                        }
                        fullWidth={true}
                        helperText="Choose the users's role"
                        label="Role"
                        onChange={[Function]}
                        required={false}
                        select={true}
                        value="student"
                        variant="standard"
                      >
                        <option
                          value="parent"
                        >
                          parent
                        </option>
                        <option
                          value="student"
                        >
                          student
                        </option>
                        <option
                          value="teacher"
                        >
                          teacher
                        </option>
                        <option
                          value="admin"
                        >
                          admin
                        </option>
                        <option
                          value="manager"
                        >
                          manager
                        </option>
                      </TextField>
                    </WithStyles(Grid)>
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        amount={5}
                        label="Graduation Year"
                        onChange={[Function]}
                        value={2019}
                      />
                    </WithStyles(Grid)>
                  </WithStyles(Grid)>,
                  "onKeyPress": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(Grid)
                        item={true}
                        lg={6}
                        xs={12}
                      >
                        <Unknown
                          label="Username"
                          onChange={[Function]}
                          required={true}
                          validator={[Function]}
                          value=""
                        />
                      </WithStyles(Grid)>,
                      <WithStyles(Grid)
                        item={true}
                        lg={6}
                        xs={12}
                      >
                        <Unknown
                          label="Displayname"
                          onChange={[Function]}
                          required={true}
                          validator={[Function]}
                          value=""
                        />
                      </WithStyles(Grid)>,
                      <WithStyles(Grid)
                        item={true}
                        lg={6}
                        xs={12}
                      >
                        <Unknown
                          label="Email"
                          onChange={[Function]}
                          required={true}
                          type="email"
                          validator={[Function]}
                          value=""
                        />
                      </WithStyles(Grid)>,
                      <WithStyles(Grid)
                        item={true}
                        xs={12}
                      >
                        <Unknown
                          label="Password"
                          onChange={[Function]}
                          type="password"
                          validator={[Function]}
                          value=""
                        />
                      </WithStyles(Grid)>,
                      <WithStyles(Typography)
                        variant="body1"
                      >
                        <en />
                      </WithStyles(Typography)>,
                      <WithStyles(Grid)
                        item={true}
                        xs={12}
                      >
                        <TextField
                          SelectProps={
                            Object {
                              "native": true,
                            }
                          }
                          fullWidth={true}
                          helperText="Choose the users's role"
                          label="Role"
                          onChange={[Function]}
                          required={false}
                          select={true}
                          value="student"
                          variant="standard"
                        >
                          <option
                            value="parent"
                          >
                            parent
                          </option>
                          <option
                            value="student"
                          >
                            student
                          </option>
                          <option
                            value="teacher"
                          >
                            teacher
                          </option>
                          <option
                            value="admin"
                          >
                            admin
                          </option>
                          <option
                            value="manager"
                          >
                            manager
                          </option>
                        </TextField>
                      </WithStyles(Grid)>,
                      false,
                      <WithStyles(Grid)
                        item={true}
                        xs={12}
                      >
                        <Unknown
                          amount={5}
                          label="Graduation Year"
                          onChange={[Function]}
                          value={2019}
                        />
                      </WithStyles(Grid)>,
                    ],
                    "container": true,
                    "direction": "row",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Unknown
                          label="Username"
                          onChange={[Function]}
                          required={true}
                          validator={[Function]}
                          value=""
                        />,
                        "item": true,
                        "lg": 6,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "label": "Username",
                          "onChange": [Function],
                          "required": true,
                          "validator": [Function],
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Unknown
                          label="Displayname"
                          onChange={[Function]}
                          required={true}
                          validator={[Function]}
                          value=""
                        />,
                        "item": true,
                        "lg": 6,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "label": "Displayname",
                          "onChange": [Function],
                          "required": true,
                          "validator": [Function],
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Unknown
                          label="Email"
                          onChange={[Function]}
                          required={true}
                          type="email"
                          validator={[Function]}
                          value=""
                        />,
                        "item": true,
                        "lg": 6,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "label": "Email",
                          "onChange": [Function],
                          "required": true,
                          "type": "email",
                          "validator": [Function],
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Unknown
                          label="Password"
                          onChange={[Function]}
                          type="password"
                          validator={[Function]}
                          value=""
                        />,
                        "item": true,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "label": "Password",
                          "onChange": [Function],
                          "type": "password",
                          "validator": [Function],
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <en />,
                        "variant": "body1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <TextField
                          SelectProps={
                            Object {
                              "native": true,
                            }
                          }
                          fullWidth={true}
                          helperText="Choose the users's role"
                          label="Role"
                          onChange={[Function]}
                          required={false}
                          select={true}
                          value="student"
                          variant="standard"
                        >
                          <option
                            value="parent"
                          >
                            parent
                          </option>
                          <option
                            value="student"
                          >
                            student
                          </option>
                          <option
                            value="teacher"
                          >
                            teacher
                          </option>
                          <option
                            value="admin"
                          >
                            admin
                          </option>
                          <option
                            value="manager"
                          >
                            manager
                          </option>
                        </TextField>,
                        "item": true,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "SelectProps": Object {
                            "native": true,
                          },
                          "children": Array [
                            <option
                              value="parent"
                            >
                              parent
                            </option>,
                            <option
                              value="student"
                            >
                              student
                            </option>,
                            <option
                              value="teacher"
                            >
                              teacher
                            </option>,
                            <option
                              value="admin"
                            >
                              admin
                            </option>,
                            <option
                              value="manager"
                            >
                              manager
                            </option>,
                          ],
                          "fullWidth": true,
                          "helperText": "Choose the users's role",
                          "label": "Role",
                          "onChange": [Function],
                          "required": false,
                          "select": true,
                          "value": "student",
                          "variant": "standard",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "parent",
                            "nodeType": "host",
                            "props": Object {
                              "children": "parent",
                              "value": "parent",
                            },
                            "ref": null,
                            "rendered": "parent",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "student",
                            "nodeType": "host",
                            "props": Object {
                              "children": "student",
                              "value": "student",
                            },
                            "ref": null,
                            "rendered": "student",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "teacher",
                            "nodeType": "host",
                            "props": Object {
                              "children": "teacher",
                              "value": "teacher",
                            },
                            "ref": null,
                            "rendered": "teacher",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "admin",
                            "nodeType": "host",
                            "props": Object {
                              "children": "admin",
                              "value": "admin",
                            },
                            "ref": null,
                            "rendered": "admin",
                            "type": "option",
                          },
                          Object {
                            "instance": null,
                            "key": "manager",
                            "nodeType": "host",
                            "props": Object {
                              "children": "manager",
                              "value": "manager",
                            },
                            "ref": null,
                            "rendered": "manager",
                            "type": "option",
                          },
                        ],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    false,
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Unknown
                          amount={5}
                          label="Graduation Year"
                          onChange={[Function]}
                          value={2019}
                        />,
                        "item": true,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "amount": 5,
                          "label": "Graduation Year",
                          "onChange": [Function],
                          "value": 2019,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": "form",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(Button)
                    onClick={[Function]}
                  >
                    Import
                  </WithStyles(Button)>,
                  <WithStyles(Button)
                    className="close"
                    color="secondary"
                    onClick={[Function]}
                  >
                    Close
                  </WithStyles(Button)>,
                  <WithStyles(Button)
                    color="primary"
                    disabled={true}
                    onClick={[Function]}
                  >
                    Submit
                  </WithStyles(Button)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Import",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Import",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Close",
                    "className": "close",
                    "color": "secondary",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Close",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Submit",
                    "color": "primary",
                    "disabled": true,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Submit",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onClose": [Function],
            "onImport": [Function],
            "show": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
