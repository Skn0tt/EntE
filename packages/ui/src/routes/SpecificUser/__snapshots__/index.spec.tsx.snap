// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SpecificUser renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SpecificUser
    classes={Object {}}
    fullScreen={true}
    getUser={[Function]}
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 2,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "",
          "pathname": "",
          "search": "",
          "state": Object {},
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    loading={false}
    location={
      Object {
        "hash": "",
        "key": "",
        "pathname": "",
        "search": "",
        "state": Object {},
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {
          "userId": "fdas90ß9sß0",
        },
        "path": "",
        "url": "",
      }
    }
    requestUser={[Function]}
    staticContext={Object {}}
    students={Array []}
    updateUser={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <UNDEFINED>
          <WithStyles(DialogTitle)>
            Horst Hansen
          </WithStyles(DialogTitle)>
          <WithStyles(DialogContent)>
            <WithStyles(GridWrapper)
              alignItems="stretch"
              container={true}
              spacing={24}
            >
              <WithStyles(GridWrapper)
                item={true}
                xs={12}
              >
                <WithStyles(DialogContentText)>
                  ID
                  : 
                  fdas90ß9sß0
                   
                  <br />
                  Rolle
                  : 
                  student
                   
                  <br />
                </WithStyles(DialogContentText)>
              </WithStyles(GridWrapper)>
              <WithStyles(GridWrapper)
                item={true}
                xs={12}
              >
                <Unknown
                  onChange={[Function]}
                  title="Displayname"
                  validator={[Function]}
                  value="Horst Hansen"
                />
              </WithStyles(GridWrapper)>
              <WithStyles(GridWrapper)
                item={true}
                xs={12}
              >
                <Unknown
                  onChange={[Function]}
                  title="Email"
                  validator={[Function]}
                  value="hort@hansen.de"
                />
              </WithStyles(GridWrapper)>
              <WithStyles(GridWrapper)
                item={true}
                xs={12}
              >
                <Unknown
                  onChange={[Function]}
                  title="Erwachsen"
                  value={false}
                />
              </WithStyles(GridWrapper)>
            </WithStyles(GridWrapper)>
          </WithStyles(DialogContent)>
        </UNDEFINED>,
        <WithStyles(DialogActions)>
          <WithStyles(Button)
            color="secondary"
            onClick={[Function]}
            size="small"
          >
            Schließen
          </WithStyles(Button)>
          <WithStyles(Button)
            color="primary"
            disabled={false}
            onClick={[Function]}
            size="small"
          >
            OK
          </WithStyles(Button)>
        </WithStyles(DialogActions)>,
      ],
      "fullScreen": true,
      "onClose": [Function],
      "open": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <WithStyles(DialogTitle)>
              Horst Hansen
            </WithStyles(DialogTitle)>,
            <WithStyles(DialogContent)>
              <WithStyles(GridWrapper)
                alignItems="stretch"
                container={true}
                spacing={24}
              >
                <WithStyles(GridWrapper)
                  item={true}
                  xs={12}
                >
                  <WithStyles(DialogContentText)>
                    ID
                    : 
                    fdas90ß9sß0
                     
                    <br />
                    Rolle
                    : 
                    student
                     
                    <br />
                  </WithStyles(DialogContentText)>
                </WithStyles(GridWrapper)>
                <WithStyles(GridWrapper)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    onChange={[Function]}
                    title="Displayname"
                    validator={[Function]}
                    value="Horst Hansen"
                  />
                </WithStyles(GridWrapper)>
                <WithStyles(GridWrapper)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    onChange={[Function]}
                    title="Email"
                    validator={[Function]}
                    value="hort@hansen.de"
                  />
                </WithStyles(GridWrapper)>
                <WithStyles(GridWrapper)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    onChange={[Function]}
                    title="Erwachsen"
                    value={false}
                  />
                </WithStyles(GridWrapper)>
              </WithStyles(GridWrapper)>
            </WithStyles(DialogContent)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Horst Hansen",
            },
            "ref": null,
            "rendered": "Horst Hansen",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(GridWrapper)
                alignItems="stretch"
                container={true}
                spacing={24}
              >
                <WithStyles(GridWrapper)
                  item={true}
                  xs={12}
                >
                  <WithStyles(DialogContentText)>
                    ID
                    : 
                    fdas90ß9sß0
                     
                    <br />
                    Rolle
                    : 
                    student
                     
                    <br />
                  </WithStyles(DialogContentText)>
                </WithStyles(GridWrapper)>
                <WithStyles(GridWrapper)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    onChange={[Function]}
                    title="Displayname"
                    validator={[Function]}
                    value="Horst Hansen"
                  />
                </WithStyles(GridWrapper)>
                <WithStyles(GridWrapper)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    onChange={[Function]}
                    title="Email"
                    validator={[Function]}
                    value="hort@hansen.de"
                  />
                </WithStyles(GridWrapper)>
                <WithStyles(GridWrapper)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    onChange={[Function]}
                    title="Erwachsen"
                    value={false}
                  />
                </WithStyles(GridWrapper)>
              </WithStyles(GridWrapper)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "alignItems": "stretch",
                "children": Array [
                  <WithStyles(GridWrapper)
                    item={true}
                    xs={12}
                  >
                    <WithStyles(DialogContentText)>
                      ID
                      : 
                      fdas90ß9sß0
                       
                      <br />
                      Rolle
                      : 
                      student
                       
                      <br />
                    </WithStyles(DialogContentText)>
                  </WithStyles(GridWrapper)>,
                  <WithStyles(GridWrapper)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      onChange={[Function]}
                      title="Displayname"
                      validator={[Function]}
                      value="Horst Hansen"
                    />
                  </WithStyles(GridWrapper)>,
                  <WithStyles(GridWrapper)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      onChange={[Function]}
                      title="Email"
                      validator={[Function]}
                      value="hort@hansen.de"
                    />
                  </WithStyles(GridWrapper)>,
                  <WithStyles(GridWrapper)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      onChange={[Function]}
                      title="Erwachsen"
                      value={false}
                    />
                  </WithStyles(GridWrapper)>,
                  false,
                ],
                "container": true,
                "spacing": 24,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(DialogContentText)>
                      ID
                      : 
                      fdas90ß9sß0
                       
                      <br />
                      Rolle
                      : 
                      student
                       
                      <br />
                    </WithStyles(DialogContentText)>,
                    "item": true,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "ID",
                        ": ",
                        "fdas90ß9sß0",
                        " ",
                        <br />,
                        "Rolle",
                        ": ",
                        "student",
                        " ",
                        <br />,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "ID",
                      ": ",
                      "fdas90ß9sß0",
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      "Rolle",
                      ": ",
                      "student",
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Unknown
                      onChange={[Function]}
                      title="Displayname"
                      validator={[Function]}
                      value="Horst Hansen"
                    />,
                    "item": true,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "onChange": [Function],
                      "title": "Displayname",
                      "validator": [Function],
                      "value": "Horst Hansen",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Unknown
                      onChange={[Function]}
                      title="Email"
                      validator={[Function]}
                      value="hort@hansen.de"
                    />,
                    "item": true,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "onChange": [Function],
                      "title": "Email",
                      "validator": [Function],
                      "value": "hort@hansen.de",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Unknown
                      onChange={[Function]}
                      title="Erwachsen"
                      value={false}
                    />,
                    "item": true,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "onChange": [Function],
                      "title": "Erwachsen",
                      "value": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                false,
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": Symbol(react.fragment),
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Button)
              color="secondary"
              onClick={[Function]}
              size="small"
            >
              Schließen
            </WithStyles(Button)>,
            <WithStyles(Button)
              color="primary"
              disabled={false}
              onClick={[Function]}
              size="small"
            >
              OK
            </WithStyles(Button)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Schließen",
              "color": "secondary",
              "onClick": [Function],
              "size": "small",
            },
            "ref": null,
            "rendered": "Schließen",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "OK",
              "color": "primary",
              "disabled": false,
              "onClick": [Function],
              "size": "small",
            },
            "ref": null,
            "rendered": "OK",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <UNDEFINED>
            <WithStyles(DialogTitle)>
              Horst Hansen
            </WithStyles(DialogTitle)>
            <WithStyles(DialogContent)>
              <WithStyles(GridWrapper)
                alignItems="stretch"
                container={true}
                spacing={24}
              >
                <WithStyles(GridWrapper)
                  item={true}
                  xs={12}
                >
                  <WithStyles(DialogContentText)>
                    ID
                    : 
                    fdas90ß9sß0
                     
                    <br />
                    Rolle
                    : 
                    student
                     
                    <br />
                  </WithStyles(DialogContentText)>
                </WithStyles(GridWrapper)>
                <WithStyles(GridWrapper)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    onChange={[Function]}
                    title="Displayname"
                    validator={[Function]}
                    value="Horst Hansen"
                  />
                </WithStyles(GridWrapper)>
                <WithStyles(GridWrapper)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    onChange={[Function]}
                    title="Email"
                    validator={[Function]}
                    value="hort@hansen.de"
                  />
                </WithStyles(GridWrapper)>
                <WithStyles(GridWrapper)
                  item={true}
                  xs={12}
                >
                  <Unknown
                    onChange={[Function]}
                    title="Erwachsen"
                    value={false}
                  />
                </WithStyles(GridWrapper)>
              </WithStyles(GridWrapper)>
            </WithStyles(DialogContent)>
          </UNDEFINED>,
          <WithStyles(DialogActions)>
            <WithStyles(Button)
              color="secondary"
              onClick={[Function]}
              size="small"
            >
              Schließen
            </WithStyles(Button)>
            <WithStyles(Button)
              color="primary"
              disabled={false}
              onClick={[Function]}
              size="small"
            >
              OK
            </WithStyles(Button)>
          </WithStyles(DialogActions)>,
        ],
        "fullScreen": true,
        "onClose": [Function],
        "open": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <WithStyles(DialogTitle)>
                Horst Hansen
              </WithStyles(DialogTitle)>,
              <WithStyles(DialogContent)>
                <WithStyles(GridWrapper)
                  alignItems="stretch"
                  container={true}
                  spacing={24}
                >
                  <WithStyles(GridWrapper)
                    item={true}
                    xs={12}
                  >
                    <WithStyles(DialogContentText)>
                      ID
                      : 
                      fdas90ß9sß0
                       
                      <br />
                      Rolle
                      : 
                      student
                       
                      <br />
                    </WithStyles(DialogContentText)>
                  </WithStyles(GridWrapper)>
                  <WithStyles(GridWrapper)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      onChange={[Function]}
                      title="Displayname"
                      validator={[Function]}
                      value="Horst Hansen"
                    />
                  </WithStyles(GridWrapper)>
                  <WithStyles(GridWrapper)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      onChange={[Function]}
                      title="Email"
                      validator={[Function]}
                      value="hort@hansen.de"
                    />
                  </WithStyles(GridWrapper)>
                  <WithStyles(GridWrapper)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      onChange={[Function]}
                      title="Erwachsen"
                      value={false}
                    />
                  </WithStyles(GridWrapper)>
                </WithStyles(GridWrapper)>
              </WithStyles(DialogContent)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Horst Hansen",
              },
              "ref": null,
              "rendered": "Horst Hansen",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(GridWrapper)
                  alignItems="stretch"
                  container={true}
                  spacing={24}
                >
                  <WithStyles(GridWrapper)
                    item={true}
                    xs={12}
                  >
                    <WithStyles(DialogContentText)>
                      ID
                      : 
                      fdas90ß9sß0
                       
                      <br />
                      Rolle
                      : 
                      student
                       
                      <br />
                    </WithStyles(DialogContentText)>
                  </WithStyles(GridWrapper)>
                  <WithStyles(GridWrapper)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      onChange={[Function]}
                      title="Displayname"
                      validator={[Function]}
                      value="Horst Hansen"
                    />
                  </WithStyles(GridWrapper)>
                  <WithStyles(GridWrapper)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      onChange={[Function]}
                      title="Email"
                      validator={[Function]}
                      value="hort@hansen.de"
                    />
                  </WithStyles(GridWrapper)>
                  <WithStyles(GridWrapper)
                    item={true}
                    xs={12}
                  >
                    <Unknown
                      onChange={[Function]}
                      title="Erwachsen"
                      value={false}
                    />
                  </WithStyles(GridWrapper)>
                </WithStyles(GridWrapper)>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "alignItems": "stretch",
                  "children": Array [
                    <WithStyles(GridWrapper)
                      item={true}
                      xs={12}
                    >
                      <WithStyles(DialogContentText)>
                        ID
                        : 
                        fdas90ß9sß0
                         
                        <br />
                        Rolle
                        : 
                        student
                         
                        <br />
                      </WithStyles(DialogContentText)>
                    </WithStyles(GridWrapper)>,
                    <WithStyles(GridWrapper)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        onChange={[Function]}
                        title="Displayname"
                        validator={[Function]}
                        value="Horst Hansen"
                      />
                    </WithStyles(GridWrapper)>,
                    <WithStyles(GridWrapper)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        onChange={[Function]}
                        title="Email"
                        validator={[Function]}
                        value="hort@hansen.de"
                      />
                    </WithStyles(GridWrapper)>,
                    <WithStyles(GridWrapper)
                      item={true}
                      xs={12}
                    >
                      <Unknown
                        onChange={[Function]}
                        title="Erwachsen"
                        value={false}
                      />
                    </WithStyles(GridWrapper)>,
                    false,
                  ],
                  "container": true,
                  "spacing": 24,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <WithStyles(DialogContentText)>
                        ID
                        : 
                        fdas90ß9sß0
                         
                        <br />
                        Rolle
                        : 
                        student
                         
                        <br />
                      </WithStyles(DialogContentText)>,
                      "item": true,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "ID",
                          ": ",
                          "fdas90ß9sß0",
                          " ",
                          <br />,
                          "Rolle",
                          ": ",
                          "student",
                          " ",
                          <br />,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        "ID",
                        ": ",
                        "fdas90ß9sß0",
                        " ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": "br",
                        },
                        "Rolle",
                        ": ",
                        "student",
                        " ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": "br",
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        onChange={[Function]}
                        title="Displayname"
                        validator={[Function]}
                        value="Horst Hansen"
                      />,
                      "item": true,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "onChange": [Function],
                        "title": "Displayname",
                        "validator": [Function],
                        "value": "Horst Hansen",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        onChange={[Function]}
                        title="Email"
                        validator={[Function]}
                        value="hort@hansen.de"
                      />,
                      "item": true,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "onChange": [Function],
                        "title": "Email",
                        "validator": [Function],
                        "value": "hort@hansen.de",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Unknown
                        onChange={[Function]}
                        title="Erwachsen"
                        value={false}
                      />,
                      "item": true,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "onChange": [Function],
                        "title": "Erwachsen",
                        "value": false,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  false,
                ],
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": Symbol(react.fragment),
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Button)
                color="secondary"
                onClick={[Function]}
                size="small"
              >
                Schließen
              </WithStyles(Button)>,
              <WithStyles(Button)
                color="primary"
                disabled={false}
                onClick={[Function]}
                size="small"
              >
                OK
              </WithStyles(Button)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Schließen",
                "color": "secondary",
                "onClick": [Function],
                "size": "small",
              },
              "ref": null,
              "rendered": "Schließen",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "OK",
                "color": "primary",
                "disabled": false,
                "onClick": [Function],
                "size": "small",
              },
              "ref": null,
              "rendered": "OK",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
